@model ProductVM
@{
    bool isEdit = Model.Product.Id != 0;
    ViewData["Title"] = isEdit ? "Edit Product" : "Create Product";
}

<style>
    .hero-section {
        background: linear-gradient(135deg, #212529 0%, #495057 100%);
        min-height: 250px;
        position: relative;
        overflow: hidden;
    }
    
    .hero-pattern {
        background-image: 
            radial-gradient(circle at 25% 25%, rgba(255,255,255,0.1) 2px, transparent 2px),
            radial-gradient(circle at 75% 75%, rgba(255,255,255,0.1) 2px, transparent 2px);
        background-size: 50px 50px;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
    
    .form-card {
        margin-top: -120px;
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.98);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        border: 1px solid rgba(255,255,255,0.3);
        max-width: 1200px;
        margin-left: auto;
        margin-right: auto;
    }
    
    .form-section {
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        border-radius: 15px;
        padding: 30px;
        margin-bottom: 25px;
        border: 1px solid #e9ecef;
        transition: all 0.3s ease;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }
    
    .form-section:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        border-color: #007bff;
    }
    
    .section-title {
        color: #495057;
        font-weight: 600;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 2px solid #e9ecef;
        display: flex;
        align-items: center;
    }
    
    .section-icon {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        width: 40px;
        height: 40px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
    }
    
    .form-control, .form-select {
        border-radius: 15px;
        border: 2px solid #e9ecef;
        padding: 12px 20px;
        font-size: 16px;
        transition: all 0.3s ease;
        background: rgba(255,255,255,0.8);
    }
    
    .form-control:focus, .form-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        background: white;
        transform: translateY(-1px);
    }
    
    .input-group-text {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 15px 0 0 15px;
        font-weight: 600;
    }
    
    .btn-action {
        border-radius: 25px;
        padding: 15px 30px;
        font-weight: 600;
        font-size: 16px;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        position: relative;
        overflow: hidden;
    }
    
    .btn-action:hover {
        transform: translateY(-3px) scale(1.02);
        box-shadow: 0 15px 35px rgba(0,0,0,0.2);
    }
    
    .btn-action::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }
    
    .btn-action:hover::before {
        left: 100%;
    }
    
    .image-upload-area {
        border: 3px dashed #dee2e6;
        border-radius: 20px;
        padding: 40px;
        text-align: center;
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        transition: all 0.3s ease;
        cursor: pointer;
    }
    
    .image-upload-area:hover {
        border-color: #667eea;
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(255,255,255,0.8) 100%);
    }
    
    .image-preview {
        max-width: 200px;
        max-height: 200px;
        border-radius: 15px;
        box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }
    
    .image-preview:hover {
        transform: scale(1.05);
    }
    
    .price-card {
        background: linear-gradient(135deg, #495057 0%, #343a40 100%);
        color: white;
        border-radius: 10px;
        padding: 15px 20px;
        margin-bottom: 10px;
        text-align: center;
        border: 2px solid #dee2e6;
        transition: all 0.3s ease;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }
    
    .price-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 15px rgba(0,0,0,0.15);
        border-color: #007bff;
    }
    
    .price-card.primary {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        border-color: #0056b3;
    }
    
    .price-card.dark {
        background: linear-gradient(135deg, #343a40 0%, #212529 100%);
        border-color: #495057;
    }
    
    .price-card h6 {
        font-size: 0.9rem;
        margin-bottom: 5px;
    }
    
    .price-card p {
        font-size: 0.75rem;
        margin-bottom: 0;
    }
    
    .progress-bar {
        height: 6px;
        border-radius: 3px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        transition: width 0.3s ease;
    }
    
    .stepper {
        display: flex;
        justify-content: space-between;
        margin-bottom: 30px;
    }
    
    .step {
        flex: 1;
        text-align: center;
        position: relative;
    }
    
    .step-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 10px;
        transition: all 0.3s ease;
    }
    
    .step.active .step-circle {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }
    
    .step-line {
        position: absolute;
        top: 25px;
        left: 50%;
        width: 100%;
        height: 2px;
        background: #e9ecef;
        z-index: -1;
    }
    
    .step.active .step-line {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    
    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .animate-in {
        animation: slideInUp 0.6s ease forwards;
    }
    
    .hero-content {
        position: relative;
        z-index: 2;
        color: white;
        text-align: center;
        padding: 80px 0;
    }
    
    .hero-title {
        font-size: 3.5rem;
        font-weight: 800;
        margin-bottom: 20px;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }
    
    .hero-subtitle {
        font-size: 1.2rem;
        opacity: 0.9;
        margin-bottom: 30px;
    }
</style>

<!-- Hero Section -->
<div class="hero-section">
    <div class="hero-pattern"></div>
    <div class="hero-content">
        <div class="container">
            <h1 class="hero-title">@(isEdit ? "✏️ Edit Product" : "✨ Create New Product")</h1>
            <p class="hero-subtitle">@(isEdit ? "Update your product information with ease" : "Add a new book to your inventory")</p>
            <!-- Progress Stepper -->
            <div class="stepper mx-auto" style="max-width: 600px;">
                <div class="step active">
                    <div class="step-circle">
                        <i class="bi bi-info-circle"></i>
                    </div>
                    <small>Basic Info</small>
                    <div class="step-line"></div>
                </div>
                <div class="step">
                    <div class="step-circle">
                        <i class="bi bi-image"></i>
                    </div>
                    <small>Media</small>
                    <div class="step-line"></div>
                </div>
                <div class="step">
                    <div class="step-circle">
                        <i class="bi bi-currency-dollar"></i>
                    </div>0
                    <small>Pricing</small>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Main Form -->
<div class="container-fluid pb-5">
    <div class="container-xl">
        <div class="row justify-content-center">
            <div class="col-xl-11 col-lg-12">
                <div class="form-card animate-in">
                    <div class="p-4 p-lg-5">
                        <form asp-action="Upsert" method="post" enctype="multipart/form-data" id="productForm">
                            <input asp-for="Product.Id" hidden />
                            <div asp-validation-summary="ModelOnly" class="alert alert-danger rounded-3 mb-4" style="display: none;"></div>
                            
                            <!-- Basic Information Section -->
                            <div class="form-section" id="basicInfo">
                                <h4 class="section-title">
                                    <div class="section-icon">
                                        <i class="bi bi-journal-bookmark"></i>
                                    </div>
                                    Basic Information
                                </h4>
                                    <div class="row">
                                        <div class="col-lg-8 mb-4">
                                            <label asp-for="Product.Title" class="form-label fw-semibold mb-2">
                                                <i class="bi bi-journal-text me-2 text-primary"></i>Book Title *
                                            </label>
                                            <input asp-for="Product.Title" class="form-control form-control-lg" 
                                                   placeholder="Enter the complete book title" 
                                                   data-validate="required" />
                                            <span asp-validation-for="Product.Title" class="text-danger small"></span>
                                            <div class="form-text">
                                                <i class="bi bi-info-circle me-1"></i>
                                                This will be the main display title for your product
                                            </div>
                                        </div>
                                        <div class="col-lg-4 mb-4">
                                            <label asp-for="Product.ISBN" class="form-label fw-semibold mb-2">
                                                <i class="bi bi-upc me-2 text-primary"></i>ISBN *
                                            </label>
                                            <input asp-for="Product.ISBN" class="form-control form-control-lg" 
                                                   placeholder="978-0000000000" 
                                                   pattern="[0-9\-]{10,17}"
                                                   data-validate="required" />
                                            <span asp-validation-for="Product.ISBN" class="text-danger small"></span>
                                            <div class="form-text">
                                                <i class="bi bi-info-circle me-1"></i>
                                                13-digit ISBN number
                                            </div>
                                        </div>
                                    </div>

                                <div class="row">
                                    <div class="col-lg-6 mb-4">
                                        <label asp-for="Product.Author" class="form-label fw-semibold mb-2">
                                            <i class="bi bi-person-fill me-2 text-primary"></i>Author *
                                        </label>
                                        <input asp-for="Product.Author" class="form-control form-control-lg" 
                                               placeholder="Enter author's full name" 
                                               data-validate="required" />
                                        <span asp-validation-for="Product.Author" class="text-danger small"></span>
                                    </div>
                                    <div class="col-lg-6 mb-4">
                                        <label asp-for="Product.CategoryId" class="form-label fw-semibold mb-2">
                                            <i class="bi bi-tag-fill me-2 text-primary"></i>Category *
                                        </label>
                                        <select asp-for="Product.CategoryId" class="form-select form-select-lg" 
                                                asp-items="Model.CategoryList" data-validate="required">
                                            <option value="">Choose a category...</option>
                                        </select>
                                        <span asp-validation-for="Product.CategoryId" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="mb-4">
                                    <label asp-for="Product.Description" class="form-label fw-semibold mb-2">
                                        <i class="bi bi-card-text me-2 text-primary"></i>Description *
                                    </label>
                                    <textarea asp-for="Product.Description" class="form-control" rows="5" 
                                              placeholder="Provide a detailed description of the book, including plot summary, key themes, and target audience..."
                                              data-validate="required"></textarea>
                                    <span asp-validation-for="Product.Description" class="text-danger small"></span>
                                    <div class="form-text d-flex justify-content-between">
                                        <span><i class="bi bi-info-circle me-1"></i>Rich description helps customers make informed decisions</span>
                                        <span id="charCount" class="text-muted">0 characters</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Media Section -->
                            <div class="form-section" id="mediaInfo">
                                <h4 class="section-title">
                                    <div class="section-icon">
                                        <i class="bi bi-camera"></i>
                                    </div>
                                    Product Image
                                </h4>
                                
                                <div class="row">
                                    <div class="col-lg-6">
                                        <label class="form-label fw-semibold mb-3">
                                            <i class="bi bi-image me-2 text-primary"></i>Product Image
                                        </label>
                                        <div class="image-upload-area" onclick="document.getElementById('imageInput').click()">
                                            <i class="bi bi-cloud-upload fs-1 text-muted mb-3"></i>
                                            <h5 class="text-muted">Click to upload image</h5>
                                            <p class="text-muted mb-0">Supports: JPG, PNG, WebP (Max: 5MB)</p>
                                            <input asp-for="Product.ImageUrl" type="file" id="imageInput" 
                                                   class="d-none" accept="image/*" onchange="previewImage(this)" />
                                        </div>
                                        <span asp-validation-for="Product.ImageUrl" class="text-danger small"></span>
                                    </div>
                                    <div class="col-lg-6">
                                        <label class="form-label fw-semibold mb-3">Preview</label>
                                        <div class="text-center">
                                            @if (isEdit && !string.IsNullOrEmpty(Model.Product.ImageUrl))
                                            {
                                                <img src="@Model.Product.ImageUrl" alt="Current image" 
                                                     class="image-preview" id="imagePreview" />
                                                <div class="mt-2">
                                                    <small class="text-success">
                                                        <i class="bi bi-check-circle me-1"></i>Current image loaded
                                                    </small>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="d-flex align-items-center justify-content-center" 
                                                     style="height: 200px; background: #f8f9fa; border-radius: 15px;" 
                                                     id="noImagePlaceholder">
                                                    <div class="text-center text-muted">
                                                        <i class="bi bi-image fs-1 mb-2"></i>
                                                        <p>No image selected</p>
                                                    </div>
                                                </div>
                                                <img src="#" alt="Preview" class="image-preview d-none" id="imagePreview" />
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Pricing Section -->
                            <div class="form-section" id="pricingInfo">
                                <h4 class="section-title">
                                    <div class="section-icon">
                                        <i class="bi bi-cash-stack"></i>
                                    </div>
                                    Pricing Information
                                </h4>
                                
                                <div class="row">
                                    <div class="col-lg-6 mb-3">
                                        <div class="price-card">
                                            <h6 class="mb-1 fw-bold">💰 List Price</h6>
                                            <p class="mb-0 opacity-75">Original retail price</p>
                                        </div>
                                        <div class="input-group">
                                            <span class="input-group-text bg-light border-end-0 fw-semibold">$</span>
                                            <input asp-for="Product.ListPrice" class="form-control border-start-0" 
                                                   placeholder="0.00" step="0.01" type="number" 
                                                   data-validate="required" min="0" />
                                        </div>
                                        <span asp-validation-for="Product.ListPrice" class="text-danger small"></span>
                                    </div>
                                    <div class="col-lg-6 mb-3">
                                        <div class="price-card primary">
                                            <h6 class="mb-1 fw-bold">🏷️ Selling Price</h6>
                                            <p class="mb-0 opacity-75">Your actual selling price</p>
                                        </div>
                                        <div class="input-group">
                                            <span class="input-group-text bg-primary text-white border-end-0 fw-semibold">$</span>
                                            <input asp-for="Product.Price" class="form-control border-start-0" 
                                                   placeholder="0.00" step="0.01" type="number" 
                                                   data-validate="required" min="0" />
                                        </div>
                                        <span asp-validation-for="Product.Price" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-6 mb-3">
                                        <div class="price-card dark">
                                            <h6 class="mb-1 fw-bold">📦 Bulk Price (50+)</h6>
                                            <p class="mb-0 opacity-75">Price for 50+ quantity orders</p>
                                        </div>
                                        <div class="input-group">
                                            <span class="input-group-text bg-dark text-white border-end-0 fw-semibold">$</span>
                                            <input asp-for="Product.Price50" class="form-control border-start-0" 
                                                   placeholder="0.00" step="0.01" type="number" 
                                                   data-validate="required" min="0" />
                                        </div>
                                        <span asp-validation-for="Product.Price50" class="text-danger small"></span>
                                    </div>
                                    <div class="col-lg-6 mb-3">
                                        <div class="price-card dark">
                                            <h6 class="mb-1 fw-bold">📦 Bulk Price (100+)</h6>
                                            <p class="mb-0 opacity-75">Price for 100+ quantity orders</p>
                                        </div>
                                        <div class="input-group">
                                            <span class="input-group-text bg-dark text-white border-end-0 fw-semibold">$</span>
                                            <input asp-for="Product.Price100" class="form-control border-start-0" 
                                                   placeholder="0.00" step="0.01" type="number" 
                                                   data-validate="required" min="0" />
                                        </div>
                                        <span asp-validation-for="Product.Price100" class="text-danger small"></span>
                                    </div>
                                </div>

                                <!-- Price Validation Alert -->
                                <div class="alert alert-info rounded-3 d-none" id="priceAlert">
                                    <i class="bi bi-info-circle me-2"></i>
                                    <strong>Pricing Tip:</strong> <span id="priceMessage"></span>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="text-center mt-5">
                                <div class="d-flex gap-3 justify-content-center flex-wrap">
                                    <button type="submit" class="btn @(isEdit ? "btn-primary" : "btn-dark") btn-action px-5 py-3">
                                        <i class="bi @(isEdit ? "bi-check-circle" : "bi-plus-circle") me-2"></i>
                                        @(isEdit ? "Update" : "Create")
                                    </button>
                                    <a asp-controller="Product" asp-action="Index" class="btn btn-outline-secondary btn-action px-5 py-3">
                                        <i class="bi bi-arrow-left me-2"></i>Back
                                    </a>
                                    @if (isEdit)
                                    {
                                        <a asp-controller="Product" asp-action="Delete" asp-route-id="@Model.Product.Id" 
                                           class="btn btn-outline-danger btn-action"
                                           onclick="return confirm('Are you sure you want to delete this product?')">
                                            <i class="bi bi-trash me-2"></i>Delete
                                        </a>
                                    }
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Image preview functionality
        function previewImage(input) {
            const file = input.files[0];
            const preview = document.getElementById('imagePreview');
            const placeholder = document.getElementById('noImagePlaceholder');
            
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.classList.remove('d-none');
                    if (placeholder) placeholder.classList.add('d-none');
                    
                    // Add upload success animation
                    preview.style.transform = 'scale(0.8)';
                    setTimeout(() => {
                        preview.style.transform = 'scale(1)';
                    }, 200);
                };
                reader.readAsDataURL(file);
            }
        }
        
        // Character counter for description
        document.addEventListener('DOMContentLoaded', function() {
            const description = document.querySelector('textarea[name="Product.Description"]');
            const charCount = document.getElementById('charCount');
            
            function updateCharCount() {
                const count = description.value.length;
                charCount.textContent = `${count} characters`;
                
                if (count > 500) {
                    charCount.classList.add('text-warning');
                } else if (count > 1000) {
                    charCount.classList.remove('text-warning');
                    charCount.classList.add('text-danger');
                } else {
                    charCount.classList.remove('text-warning', 'text-danger');
                }
            }
            
            description.addEventListener('input', updateCharCount);
            updateCharCount(); // Initial count
        });
        
        // Price validation and suggestions
        document.addEventListener('DOMContentLoaded', function() {
            const listPrice = document.querySelector('input[name="Product.ListPrice"]');
            const price = document.querySelector('input[name="Product.Price"]');
            const price50 = document.querySelector('input[name="Product.Price50"]');
            const price100 = document.querySelector('input[name="Product.Price100"]');
            const priceAlert = document.getElementById('priceAlert');
            const priceMessage = document.getElementById('priceMessage');
            
            function validatePricing() {
                const listVal = parseFloat(listPrice.value) || 0;
                const priceVal = parseFloat(price.value) || 0;
                const price50Val = parseFloat(price50.value) || 0;
                const price100Val = parseFloat(price100.value) || 0;
                
                let message = '';
                let showAlert = false;
                
                if (priceVal > listVal && listVal > 0) {
                    message = 'Selling price is higher than list price. Consider adjusting.';
                    showAlert = true;
                    priceAlert.className = 'alert alert-warning rounded-3';
                } else if (price50Val >= priceVal && priceVal > 0) {
                    message = 'Bulk price (50+) should be lower than regular price for better discounts.';
                    showAlert = true;
                    priceAlert.className = 'alert alert-info rounded-3';
                } else if (price100Val >= price50Val && price50Val > 0) {
                    message = 'Bulk price (100+) should be lower than 50+ price for progressive discounts.';
                    showAlert = true;
                    priceAlert.className = 'alert alert-info rounded-3';
                } else if (priceVal > 0 && price50Val > 0 && price100Val > 0 && 
                          priceVal > price50Val && price50Val > price100Val) {
                    message = 'Great! Your pricing structure offers progressive bulk discounts.';
                    showAlert = true;
                    priceAlert.className = 'alert alert-success rounded-3';
                }
                
                if (showAlert) {
                    priceMessage.textContent = message;
                    priceAlert.classList.remove('d-none');
                } else {
                    priceAlert.classList.add('d-none');
                }
            }
            
            [listPrice, price, price50, price100].forEach(input => {
                input.addEventListener('input', validatePricing);
                input.addEventListener('blur', validatePricing);
            });
        });
        
        // Form progress tracking
        document.addEventListener('DOMContentLoaded', function() {
            const steps = document.querySelectorAll('.step');
            const sections = document.querySelectorAll('.form-section');
            
            function updateProgress() {
                const basicInfo = document.getElementById('basicInfo');
                const mediaInfo = document.getElementById('mediaInfo');
                const pricingInfo = document.getElementById('pricingInfo');
                
                // Check basic info completion
                const title = document.querySelector('input[name="Product.Title"]').value;
                const author = document.querySelector('input[name="Product.Author"]').value;
                const isbn = document.querySelector('input[name="Product.ISBN"]').value;
                const category = document.querySelector('select[name="Product.CategoryId"]').value;
                const description = document.querySelector('textarea[name="Product.Description"]').value;
                
                const basicComplete = title && author && isbn && category && description;
                
                // Check media completion (optional but good to have)
                const hasImage = document.querySelector('input[name="Product.ImageUrl"]').files.length > 0 || 
                                @((!string.IsNullOrEmpty(Model?.Product?.ImageUrl)).ToString().ToLower());
                
                // Check pricing completion
                const listPrice = document.querySelector('input[name="Product.ListPrice"]').value;
                const price = document.querySelector('input[name="Product.Price"]').value;
                const price50 = document.querySelector('input[name="Product.Price50"]').value;
                const price100 = document.querySelector('input[name="Product.Price100"]').value;
                
                const pricingComplete = listPrice && price && price50 && price100;
                
                // Update step indicators
                steps[0].classList.toggle('active', basicComplete);
                steps[1].classList.toggle('active', hasImage);
                steps[2].classList.toggle('active', pricingComplete);
            }
            
            // Add event listeners to all form inputs
            document.querySelectorAll('input, select, textarea').forEach(input => {
                input.addEventListener('input', updateProgress);
                input.addEventListener('change', updateProgress);
            });
            
            // Initial progress check
            updateProgress();
        });
        
        // Smooth scrolling for sections
        document.addEventListener('DOMContentLoaded', function() {
            const sections = document.querySelectorAll('.form-section');
            
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.animationDelay = '0s';
                        entry.target.classList.add('animate-in');
                    }
                });
            }, { threshold: 0.1 });
            
            sections.forEach(section => {
                observer.observe(section);
            });
        });
        
        // Form validation enhancement
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('productForm');
            const inputs = form.querySelectorAll('[data-validate="required"]');
            
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    validateField(this);
                });
                
                input.addEventListener('input', function() {
                    if (this.classList.contains('is-invalid')) {
                        validateField(this);
                    }
                });
            });
            
            function validateField(field) {
                const value = field.value.trim();
                const isValid = value !== '';
                
                field.classList.toggle('is-valid', isValid);
                field.classList.toggle('is-invalid', !isValid);
                
                // Add/remove validation icons
                const parent = field.parentElement;
                let icon = parent.querySelector('.validation-icon');
                
                if (!icon) {
                    icon = document.createElement('i');
                    icon.className = 'validation-icon position-absolute';
                    icon.style.right = '15px';
                    icon.style.top = '50%';
                    icon.style.transform = 'translateY(-50%)';
                    icon.style.zIndex = '10';
                    parent.style.position = 'relative';
                    parent.appendChild(icon);
                }
                
                if (isValid) {
                    icon.className = 'validation-icon position-absolute bi bi-check-circle text-success';
                } else if (field.classList.contains('is-invalid')) {
                    icon.className = 'validation-icon position-absolute bi bi-x-circle text-danger';
                } else {
                    icon.className = 'validation-icon position-absolute d-none';
                }
            }
            
            // Form submission with loading state
            form.addEventListener('submit', function(e) {
                const submitBtn = form.querySelector('button[type="submit"]');
                const originalText = submitBtn.innerHTML;
                
                // Show loading state
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Processing...';
                
                // If validation fails, restore button
                setTimeout(() => {
                    if (!form.checkValidity()) {
                        submitBtn.disabled = false;
                        submitBtn.innerHTML = originalText;
                    }
                }, 100);
            });
        });
        
        // Auto-save draft functionality (optional enhancement)
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('productForm');
            const inputs = form.querySelectorAll('input, select, textarea');
            let saveTimeout;
            
            function saveAsDraft() {
                const formData = new FormData(form);
                const draftData = {};
                
                for (let [key, value] of formData.entries()) {
                    if (key !== '__RequestVerificationToken' && key !== 'Product.Id') {
                        draftData[key] = value;
                    }
                }
                
                localStorage.setItem('productDraft', JSON.stringify(draftData));
                
                // Show save indicator
                const saveIndicator = document.getElementById('saveIndicator');
                if (saveIndicator) {
                    saveIndicator.textContent = 'Draft saved';
                    saveIndicator.classList.remove('d-none');
                    setTimeout(() => {
                        saveIndicator.classList.add('d-none');
                    }, 2000);
                }
            }
            
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    clearTimeout(saveTimeout);
                    saveTimeout = setTimeout(saveAsDraft, 2000); // Save after 2 seconds of inactivity
                });
            });
        });
    </script>
}
